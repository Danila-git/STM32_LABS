
the_first.elf:     file format elf32-littlearm

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .isr_vector   000001d8  08000000  08000000  00001000  2**0
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
  1 .text         00000194  080001d8  080001d8  000011d8  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  2 .rodata       00000000  0800036c  08000374  00001374  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  3 .ARM.extab    00000000  0800036c  0800036c  00001374  2**0
                  CONTENTS, READONLY
  4 .ARM          00000000  0800036c  0800036c  00001374  2**0
                  CONTENTS, READONLY
  5 .preinit_array 00000000  0800036c  08000374  00001374  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  6 .init_array   00000004  0800036c  0800036c  0000136c  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
  7 .fini_array   00000004  08000370  08000370  00001370  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
  8 .data         00000000  20000000  20000000  00001374  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  9 .ccmsram      00000000  10000000  10000000  00001374  2**0
                  CONTENTS
 10 .bss          0000001c  20000000  20000000  00002000  2**2
                  ALLOC
 11 ._user_heap_stack 00000604  2000001c  2000001c  00002000  2**0
                  ALLOC
 12 .ARM.attributes 00000030  00000000  00000000  00001374  2**0
                  CONTENTS, READONLY
 13 .debug_info   00000368  00000000  00000000  000013a4  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 14 .debug_abbrev 000000db  00000000  00000000  0000170c  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 15 .debug_aranges 00000048  00000000  00000000  000017e8  2**3
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 16 .debug_rnglists 0000002d  00000000  00000000  00001830  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 17 .debug_macro  0001ae07  00000000  00000000  0000185d  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 18 .debug_line   0000070f  00000000  00000000  0001c664  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 19 .debug_str    0009da00  00000000  00000000  0001cd73  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 20 .comment      00000043  00000000  00000000  000ba773  2**0
                  CONTENTS, READONLY
 21 .debug_frame  00000054  00000000  00000000  000ba7b8  2**2
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 22 .debug_line_str 0000005e  00000000  00000000  000ba80c  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS

Disassembly of section .text:

080001d8 <__do_global_dtors_aux>:
 80001d8:	b510      	push	{r4, lr}
 80001da:	4c05      	ldr	r4, [pc, #20]	@ (80001f0 <__do_global_dtors_aux+0x18>)
 80001dc:	7823      	ldrb	r3, [r4, #0]
 80001de:	b933      	cbnz	r3, 80001ee <__do_global_dtors_aux+0x16>
 80001e0:	4b04      	ldr	r3, [pc, #16]	@ (80001f4 <__do_global_dtors_aux+0x1c>)
 80001e2:	b113      	cbz	r3, 80001ea <__do_global_dtors_aux+0x12>
 80001e4:	4804      	ldr	r0, [pc, #16]	@ (80001f8 <__do_global_dtors_aux+0x20>)
 80001e6:	f3af 8000 	nop.w
 80001ea:	2301      	movs	r3, #1
 80001ec:	7023      	strb	r3, [r4, #0]
 80001ee:	bd10      	pop	{r4, pc}
 80001f0:	20000000 	.word	0x20000000
 80001f4:	00000000 	.word	0x00000000
 80001f8:	08000354 	.word	0x08000354

080001fc <frame_dummy>:
 80001fc:	b508      	push	{r3, lr}
 80001fe:	4b03      	ldr	r3, [pc, #12]	@ (800020c <frame_dummy+0x10>)
 8000200:	b11b      	cbz	r3, 800020a <frame_dummy+0xe>
 8000202:	4903      	ldr	r1, [pc, #12]	@ (8000210 <frame_dummy+0x14>)
 8000204:	4803      	ldr	r0, [pc, #12]	@ (8000214 <frame_dummy+0x18>)
 8000206:	f3af 8000 	nop.w
 800020a:	bd08      	pop	{r3, pc}
 800020c:	00000000 	.word	0x00000000
 8000210:	20000004 	.word	0x20000004
 8000214:	08000354 	.word	0x08000354

08000218 <main>:
#include "stm32g474xx.h"

int main(void)
{
 8000218:	b480      	push	{r7}
 800021a:	af00      	add	r7, sp, #0
    RCC->AHB2ENR |= RCC_AHB2ENR_GPIODEN | RCC_AHB2ENR_GPIOEEN | RCC_AHB2ENR_GPIOBEN;
 800021c:	4b22      	ldr	r3, [pc, #136]	@ (80002a8 <main+0x90>)
 800021e:	6cdb      	ldr	r3, [r3, #76]	@ 0x4c
 8000220:	4a21      	ldr	r2, [pc, #132]	@ (80002a8 <main+0x90>)
 8000222:	f043 031a 	orr.w	r3, r3, #26
 8000226:	64d3      	str	r3, [r2, #76]	@ 0x4c

    GPIOD->MODER &= ~(GPIO_MODER_MODE9_Msk);
 8000228:	4b20      	ldr	r3, [pc, #128]	@ (80002ac <main+0x94>)
 800022a:	681b      	ldr	r3, [r3, #0]
 800022c:	4a1f      	ldr	r2, [pc, #124]	@ (80002ac <main+0x94>)
 800022e:	f423 2340 	bic.w	r3, r3, #786432	@ 0xc0000
 8000232:	6013      	str	r3, [r2, #0]
    GPIOD->MODER |= 1 << GPIO_MODER_MODE9_Pos;
 8000234:	4b1d      	ldr	r3, [pc, #116]	@ (80002ac <main+0x94>)
 8000236:	681b      	ldr	r3, [r3, #0]
 8000238:	4a1c      	ldr	r2, [pc, #112]	@ (80002ac <main+0x94>)
 800023a:	f443 2380 	orr.w	r3, r3, #262144	@ 0x40000
 800023e:	6013      	str	r3, [r2, #0]

    GPIOE->MODER &= ~(GPIO_MODER_MODE7_Msk);
 8000240:	4b1b      	ldr	r3, [pc, #108]	@ (80002b0 <main+0x98>)
 8000242:	681b      	ldr	r3, [r3, #0]
 8000244:	4a1a      	ldr	r2, [pc, #104]	@ (80002b0 <main+0x98>)
 8000246:	f423 4340 	bic.w	r3, r3, #49152	@ 0xc000
 800024a:	6013      	str	r3, [r2, #0]
    GPIOE->MODER |= 1 << GPIO_MODER_MODE7_Pos;
 800024c:	4b18      	ldr	r3, [pc, #96]	@ (80002b0 <main+0x98>)
 800024e:	681b      	ldr	r3, [r3, #0]
 8000250:	4a17      	ldr	r2, [pc, #92]	@ (80002b0 <main+0x98>)
 8000252:	f443 4380 	orr.w	r3, r3, #16384	@ 0x4000
 8000256:	6013      	str	r3, [r2, #0]

    GPIOB->MODER &= ~(GPIO_MODER_MODE15_Msk | GPIO_MODER_MODE13_Msk);
 8000258:	4b16      	ldr	r3, [pc, #88]	@ (80002b4 <main+0x9c>)
 800025a:	681b      	ldr	r3, [r3, #0]
 800025c:	4a15      	ldr	r2, [pc, #84]	@ (80002b4 <main+0x9c>)
 800025e:	f023 434c 	bic.w	r3, r3, #3422552064	@ 0xcc000000
 8000262:	6013      	str	r3, [r2, #0]
    GPIOB->MODER |= 0 << GPIO_MODER_MODE15_Pos | 0 << GPIO_MODER_MODE13_Pos;
 8000264:	4b13      	ldr	r3, [pc, #76]	@ (80002b4 <main+0x9c>)
 8000266:	4a13      	ldr	r2, [pc, #76]	@ (80002b4 <main+0x9c>)
 8000268:	681b      	ldr	r3, [r3, #0]
 800026a:	6013      	str	r3, [r2, #0]

    while(1)
    {
    	if((GPIOB->IDR & GPIO_IDR_ID15) == 0)
 800026c:	4b11      	ldr	r3, [pc, #68]	@ (80002b4 <main+0x9c>)
 800026e:	691b      	ldr	r3, [r3, #16]
 8000270:	f403 4300 	and.w	r3, r3, #32768	@ 0x8000
 8000274:	2b00      	cmp	r3, #0
 8000276:	d103      	bne.n	8000280 <main+0x68>
    	{
    		GPIOE->BSRR = GPIO_BSRR_BS7;
 8000278:	4b0d      	ldr	r3, [pc, #52]	@ (80002b0 <main+0x98>)
 800027a:	2280      	movs	r2, #128	@ 0x80
 800027c:	619a      	str	r2, [r3, #24]
 800027e:	e003      	b.n	8000288 <main+0x70>
    	}else
    	{
    		GPIOE->BSRR = GPIO_BSRR_BR7;
 8000280:	4b0b      	ldr	r3, [pc, #44]	@ (80002b0 <main+0x98>)
 8000282:	f44f 0200 	mov.w	r2, #8388608	@ 0x800000
 8000286:	619a      	str	r2, [r3, #24]
    	}
        if((GPIOB->IDR & GPIO_IDR_ID13) == 0)
 8000288:	4b0a      	ldr	r3, [pc, #40]	@ (80002b4 <main+0x9c>)
 800028a:	691b      	ldr	r3, [r3, #16]
 800028c:	f403 5300 	and.w	r3, r3, #8192	@ 0x2000
 8000290:	2b00      	cmp	r3, #0
 8000292:	d104      	bne.n	800029e <main+0x86>
    	{
    		GPIOD->BSRR = GPIO_BSRR_BS9;
 8000294:	4b05      	ldr	r3, [pc, #20]	@ (80002ac <main+0x94>)
 8000296:	f44f 7200 	mov.w	r2, #512	@ 0x200
 800029a:	619a      	str	r2, [r3, #24]
 800029c:	e7e6      	b.n	800026c <main+0x54>
    	}else
    	{
    		GPIOD->BSRR = GPIO_BSRR_BR9;
 800029e:	4b03      	ldr	r3, [pc, #12]	@ (80002ac <main+0x94>)
 80002a0:	f04f 7200 	mov.w	r2, #33554432	@ 0x2000000
 80002a4:	619a      	str	r2, [r3, #24]
    	if((GPIOB->IDR & GPIO_IDR_ID15) == 0)
 80002a6:	e7e1      	b.n	800026c <main+0x54>
 80002a8:	40021000 	.word	0x40021000
 80002ac:	48000c00 	.word	0x48000c00
 80002b0:	48001000 	.word	0x48001000
 80002b4:	48000400 	.word	0x48000400

080002b8 <Reset_Handler>:
 80002b8:	480d      	ldr	r0, [pc, #52]	@ (80002f0 <LoopForever+0x2>)
 80002ba:	4685      	mov	sp, r0
 80002bc:	f3af 8000 	nop.w
 80002c0:	480c      	ldr	r0, [pc, #48]	@ (80002f4 <LoopForever+0x6>)
 80002c2:	490d      	ldr	r1, [pc, #52]	@ (80002f8 <LoopForever+0xa>)
 80002c4:	4a0d      	ldr	r2, [pc, #52]	@ (80002fc <LoopForever+0xe>)
 80002c6:	2300      	movs	r3, #0
 80002c8:	e002      	b.n	80002d0 <LoopCopyDataInit>

080002ca <CopyDataInit>:
 80002ca:	58d4      	ldr	r4, [r2, r3]
 80002cc:	50c4      	str	r4, [r0, r3]
 80002ce:	3304      	adds	r3, #4

080002d0 <LoopCopyDataInit>:
 80002d0:	18c4      	adds	r4, r0, r3
 80002d2:	428c      	cmp	r4, r1
 80002d4:	d3f9      	bcc.n	80002ca <CopyDataInit>
 80002d6:	4a0a      	ldr	r2, [pc, #40]	@ (8000300 <LoopForever+0x12>)
 80002d8:	4c0a      	ldr	r4, [pc, #40]	@ (8000304 <LoopForever+0x16>)
 80002da:	2300      	movs	r3, #0
 80002dc:	e001      	b.n	80002e2 <LoopFillZerobss>

080002de <FillZerobss>:
 80002de:	6013      	str	r3, [r2, #0]
 80002e0:	3204      	adds	r2, #4

080002e2 <LoopFillZerobss>:
 80002e2:	42a2      	cmp	r2, r4
 80002e4:	d3fb      	bcc.n	80002de <FillZerobss>
 80002e6:	f000 f811 	bl	800030c <__libc_init_array>
 80002ea:	f7ff ff95 	bl	8000218 <main>

080002ee <LoopForever>:
 80002ee:	e7fe      	b.n	80002ee <LoopForever>
 80002f0:	20020000 	.word	0x20020000
 80002f4:	20000000 	.word	0x20000000
 80002f8:	20000000 	.word	0x20000000
 80002fc:	08000374 	.word	0x08000374
 8000300:	20000000 	.word	0x20000000
 8000304:	2000001c 	.word	0x2000001c

08000308 <ADC1_2_IRQHandler>:
 8000308:	e7fe      	b.n	8000308 <ADC1_2_IRQHandler>
	...

0800030c <__libc_init_array>:
 800030c:	b570      	push	{r4, r5, r6, lr}
 800030e:	4d0d      	ldr	r5, [pc, #52]	@ (8000344 <__libc_init_array+0x38>)
 8000310:	4c0d      	ldr	r4, [pc, #52]	@ (8000348 <__libc_init_array+0x3c>)
 8000312:	1b64      	subs	r4, r4, r5
 8000314:	10a4      	asrs	r4, r4, #2
 8000316:	2600      	movs	r6, #0
 8000318:	42a6      	cmp	r6, r4
 800031a:	d109      	bne.n	8000330 <__libc_init_array+0x24>
 800031c:	4d0b      	ldr	r5, [pc, #44]	@ (800034c <__libc_init_array+0x40>)
 800031e:	4c0c      	ldr	r4, [pc, #48]	@ (8000350 <__libc_init_array+0x44>)
 8000320:	f000 f818 	bl	8000354 <_init>
 8000324:	1b64      	subs	r4, r4, r5
 8000326:	10a4      	asrs	r4, r4, #2
 8000328:	2600      	movs	r6, #0
 800032a:	42a6      	cmp	r6, r4
 800032c:	d105      	bne.n	800033a <__libc_init_array+0x2e>
 800032e:	bd70      	pop	{r4, r5, r6, pc}
 8000330:	f855 3b04 	ldr.w	r3, [r5], #4
 8000334:	4798      	blx	r3
 8000336:	3601      	adds	r6, #1
 8000338:	e7ee      	b.n	8000318 <__libc_init_array+0xc>
 800033a:	f855 3b04 	ldr.w	r3, [r5], #4
 800033e:	4798      	blx	r3
 8000340:	3601      	adds	r6, #1
 8000342:	e7f2      	b.n	800032a <__libc_init_array+0x1e>
 8000344:	0800036c 	.word	0x0800036c
 8000348:	0800036c 	.word	0x0800036c
 800034c:	0800036c 	.word	0x0800036c
 8000350:	08000370 	.word	0x08000370

08000354 <_init>:
 8000354:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 8000356:	bf00      	nop
 8000358:	bcf8      	pop	{r3, r4, r5, r6, r7}
 800035a:	bc08      	pop	{r3}
 800035c:	469e      	mov	lr, r3
 800035e:	4770      	bx	lr

08000360 <_fini>:
 8000360:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 8000362:	bf00      	nop
 8000364:	bcf8      	pop	{r3, r4, r5, r6, r7}
 8000366:	bc08      	pop	{r3}
 8000368:	469e      	mov	lr, r3
 800036a:	4770      	bx	lr
