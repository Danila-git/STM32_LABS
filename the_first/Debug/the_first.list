
the_first.elf:     file format elf32-littlearm

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .isr_vector   000001d8  08000000  08000000  00001000  2**0
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
  1 .text         000002b0  080001d8  080001d8  000011d8  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  2 .rodata       00000000  08000488  08000488  00002004  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  3 .ARM.extab    00000000  08000488  08000488  00002004  2**0
                  CONTENTS, READONLY
  4 .ARM          00000000  08000488  08000488  00002004  2**0
                  CONTENTS, READONLY
  5 .preinit_array 00000000  08000488  08000488  00002004  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  6 .init_array   00000004  08000488  08000488  00001488  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
  7 .fini_array   00000004  0800048c  0800048c  0000148c  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
  8 .data         00000004  20000000  08000490  00002000  2**2
                  CONTENTS, ALLOC, LOAD, DATA
  9 .ccmsram      00000000  10000000  10000000  00002004  2**0
                  CONTENTS
 10 .bss          00000020  20000004  20000004  00002004  2**2
                  ALLOC
 11 ._user_heap_stack 00000604  20000024  20000024  00002004  2**0
                  ALLOC
 12 .ARM.attributes 00000030  00000000  00000000  00002004  2**0
                  CONTENTS, READONLY
 13 .debug_info   00000b56  00000000  00000000  00002034  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 14 .debug_abbrev 000001a4  00000000  00000000  00002b8a  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 15 .debug_aranges 00000060  00000000  00000000  00002d30  2**3
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 16 .debug_rnglists 0000003f  00000000  00000000  00002d90  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 17 .debug_macro  0001ae07  00000000  00000000  00002dcf  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 18 .debug_line   000007c0  00000000  00000000  0001dbd6  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 19 .debug_str    0009e14e  00000000  00000000  0001e396  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 20 .comment      00000043  00000000  00000000  000bc4e4  2**0
                  CONTENTS, READONLY
 21 .debug_frame  000000c0  00000000  00000000  000bc528  2**2
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 22 .debug_line_str 00000041  00000000  00000000  000bc5e8  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS

Disassembly of section .text:

080001d8 <__do_global_dtors_aux>:
 80001d8:	b510      	push	{r4, lr}
 80001da:	4c05      	ldr	r4, [pc, #20]	@ (80001f0 <__do_global_dtors_aux+0x18>)
 80001dc:	7823      	ldrb	r3, [r4, #0]
 80001de:	b933      	cbnz	r3, 80001ee <__do_global_dtors_aux+0x16>
 80001e0:	4b04      	ldr	r3, [pc, #16]	@ (80001f4 <__do_global_dtors_aux+0x1c>)
 80001e2:	b113      	cbz	r3, 80001ea <__do_global_dtors_aux+0x12>
 80001e4:	4804      	ldr	r0, [pc, #16]	@ (80001f8 <__do_global_dtors_aux+0x20>)
 80001e6:	f3af 8000 	nop.w
 80001ea:	2301      	movs	r3, #1
 80001ec:	7023      	strb	r3, [r4, #0]
 80001ee:	bd10      	pop	{r4, pc}
 80001f0:	20000004 	.word	0x20000004
 80001f4:	00000000 	.word	0x00000000
 80001f8:	08000470 	.word	0x08000470

080001fc <frame_dummy>:
 80001fc:	b508      	push	{r3, lr}
 80001fe:	4b03      	ldr	r3, [pc, #12]	@ (800020c <frame_dummy+0x10>)
 8000200:	b11b      	cbz	r3, 800020a <frame_dummy+0xe>
 8000202:	4903      	ldr	r1, [pc, #12]	@ (8000210 <frame_dummy+0x14>)
 8000204:	4803      	ldr	r0, [pc, #12]	@ (8000214 <frame_dummy+0x18>)
 8000206:	f3af 8000 	nop.w
 800020a:	bd08      	pop	{r3, pc}
 800020c:	00000000 	.word	0x00000000
 8000210:	20000008 	.word	0x20000008
 8000214:	08000470 	.word	0x08000470

08000218 <__NVIC_EnableIRQ>:
  \details Enables a device specific interrupt in the NVIC interrupt controller.
  \param [in]      IRQn  Device specific interrupt number.
  \note    IRQn must not be negative.
 */
__STATIC_INLINE void __NVIC_EnableIRQ(IRQn_Type IRQn)
{
 8000218:	b480      	push	{r7}
 800021a:	b083      	sub	sp, #12
 800021c:	af00      	add	r7, sp, #0
 800021e:	4603      	mov	r3, r0
 8000220:	71fb      	strb	r3, [r7, #7]
  if ((int32_t)(IRQn) >= 0)
 8000222:	f997 3007 	ldrsb.w	r3, [r7, #7]
 8000226:	2b00      	cmp	r3, #0
 8000228:	db0b      	blt.n	8000242 <__NVIC_EnableIRQ+0x2a>
  {
    __COMPILER_BARRIER();
    NVIC->ISER[(((uint32_t)IRQn) >> 5UL)] = (uint32_t)(1UL << (((uint32_t)IRQn) & 0x1FUL));
 800022a:	79fb      	ldrb	r3, [r7, #7]
 800022c:	f003 021f 	and.w	r2, r3, #31
 8000230:	4907      	ldr	r1, [pc, #28]	@ (8000250 <__NVIC_EnableIRQ+0x38>)
 8000232:	f997 3007 	ldrsb.w	r3, [r7, #7]
 8000236:	095b      	lsrs	r3, r3, #5
 8000238:	2001      	movs	r0, #1
 800023a:	fa00 f202 	lsl.w	r2, r0, r2
 800023e:	f841 2023 	str.w	r2, [r1, r3, lsl #2]
    __COMPILER_BARRIER();
  }
}
 8000242:	bf00      	nop
 8000244:	370c      	adds	r7, #12
 8000246:	46bd      	mov	sp, r7
 8000248:	f85d 7b04 	ldr.w	r7, [sp], #4
 800024c:	4770      	bx	lr
 800024e:	bf00      	nop
 8000250:	e000e100 	.word	0xe000e100

08000254 <main>:
#include "stm32g474xx.h"

uint32_t turn_on = 0;
uint32_t frec_change = 15999;

int main(void) {
 8000254:	b580      	push	{r7, lr}
 8000256:	af00      	add	r7, sp, #0
	RCC->AHB2ENR |= RCC_AHB2ENR_GPIODEN | RCC_AHB2ENR_GPIOBEN;
 8000258:	4b28      	ldr	r3, [pc, #160]	@ (80002fc <main+0xa8>)
 800025a:	6cdb      	ldr	r3, [r3, #76]	@ 0x4c
 800025c:	4a27      	ldr	r2, [pc, #156]	@ (80002fc <main+0xa8>)
 800025e:	f043 030a 	orr.w	r3, r3, #10
 8000262:	64d3      	str	r3, [r2, #76]	@ 0x4c
	RCC->APB2ENR |= RCC_APB2ENR_SYSCFGEN;
 8000264:	4b25      	ldr	r3, [pc, #148]	@ (80002fc <main+0xa8>)
 8000266:	6e1b      	ldr	r3, [r3, #96]	@ 0x60
 8000268:	4a24      	ldr	r2, [pc, #144]	@ (80002fc <main+0xa8>)
 800026a:	f043 0301 	orr.w	r3, r3, #1
 800026e:	6613      	str	r3, [r2, #96]	@ 0x60

	SYSCFG->EXTICR[3] |= SYSCFG_EXTICR4_EXTI12_PB;
 8000270:	4b23      	ldr	r3, [pc, #140]	@ (8000300 <main+0xac>)
 8000272:	695b      	ldr	r3, [r3, #20]
 8000274:	4a22      	ldr	r2, [pc, #136]	@ (8000300 <main+0xac>)
 8000276:	f043 0301 	orr.w	r3, r3, #1
 800027a:	6153      	str	r3, [r2, #20]

	    EXTI->IMR1 |= EXTI_IMR1_IM12;
 800027c:	4b21      	ldr	r3, [pc, #132]	@ (8000304 <main+0xb0>)
 800027e:	681b      	ldr	r3, [r3, #0]
 8000280:	4a20      	ldr	r2, [pc, #128]	@ (8000304 <main+0xb0>)
 8000282:	f443 5380 	orr.w	r3, r3, #4096	@ 0x1000
 8000286:	6013      	str	r3, [r2, #0]
	    EXTI->FTSR1 |= EXTI_FTSR1_FT12;
 8000288:	4b1e      	ldr	r3, [pc, #120]	@ (8000304 <main+0xb0>)
 800028a:	68db      	ldr	r3, [r3, #12]
 800028c:	4a1d      	ldr	r2, [pc, #116]	@ (8000304 <main+0xb0>)
 800028e:	f443 5380 	orr.w	r3, r3, #4096	@ 0x1000
 8000292:	60d3      	str	r3, [r2, #12]
	    EXTI->RTSR1 |= EXTI_RTSR1_RT12;
 8000294:	4b1b      	ldr	r3, [pc, #108]	@ (8000304 <main+0xb0>)
 8000296:	689b      	ldr	r3, [r3, #8]
 8000298:	4a1a      	ldr	r2, [pc, #104]	@ (8000304 <main+0xb0>)
 800029a:	f443 5380 	orr.w	r3, r3, #4096	@ 0x1000
 800029e:	6093      	str	r3, [r2, #8]
	    NVIC_EnableIRQ( EXTI15_10_IRQn );
 80002a0:	2028      	movs	r0, #40	@ 0x28
 80002a2:	f7ff ffb9 	bl	8000218 <__NVIC_EnableIRQ>

	GPIOD->MODER &= ~(GPIO_MODER_MODE9_Msk | GPIO_MODER_MODE10_Msk
 80002a6:	4b18      	ldr	r3, [pc, #96]	@ (8000308 <main+0xb4>)
 80002a8:	681b      	ldr	r3, [r3, #0]
 80002aa:	4a17      	ldr	r2, [pc, #92]	@ (8000308 <main+0xb4>)
 80002ac:	f023 737f 	bic.w	r3, r3, #66846720	@ 0x3fc0000
 80002b0:	6013      	str	r3, [r2, #0]
			| GPIO_MODER_MODE11_Msk | GPIO_MODER_MODE12_Msk);
	GPIOD->MODER |= 1 << GPIO_MODER_MODE9_Pos | 1 << GPIO_MODER_MODE10_Pos
 80002b2:	4b15      	ldr	r3, [pc, #84]	@ (8000308 <main+0xb4>)
 80002b4:	681b      	ldr	r3, [r3, #0]
 80002b6:	4a14      	ldr	r2, [pc, #80]	@ (8000308 <main+0xb4>)
 80002b8:	f043 73aa 	orr.w	r3, r3, #22282240	@ 0x1540000
 80002bc:	6013      	str	r3, [r2, #0]
			| 1 << GPIO_MODER_MODE11_Pos | 1 << GPIO_MODER_MODE12_Pos;

	GPIOB->MODER &= ~(GPIO_MODER_MODE12_Msk);
 80002be:	4b13      	ldr	r3, [pc, #76]	@ (800030c <main+0xb8>)
 80002c0:	681b      	ldr	r3, [r3, #0]
 80002c2:	4a12      	ldr	r2, [pc, #72]	@ (800030c <main+0xb8>)
 80002c4:	f023 7340 	bic.w	r3, r3, #50331648	@ 0x3000000
 80002c8:	6013      	str	r3, [r2, #0]
	//частота микроконтроллера 16Mгц
	RCC->APB1ENR1 |= RCC_APB1ENR1_TIM2EN;
 80002ca:	4b0c      	ldr	r3, [pc, #48]	@ (80002fc <main+0xa8>)
 80002cc:	6d9b      	ldr	r3, [r3, #88]	@ 0x58
 80002ce:	4a0b      	ldr	r2, [pc, #44]	@ (80002fc <main+0xa8>)
 80002d0:	f043 0301 	orr.w	r3, r3, #1
 80002d4:	6593      	str	r3, [r2, #88]	@ 0x58

	//настройка прерывания на каждые 2 секунды
 	TIM2->PSC = frec_change;
 80002d6:	f04f 4280 	mov.w	r2, #1073741824	@ 0x40000000
 80002da:	4b0d      	ldr	r3, [pc, #52]	@ (8000310 <main+0xbc>)
 80002dc:	681b      	ldr	r3, [r3, #0]
 80002de:	6293      	str	r3, [r2, #40]	@ 0x28
	TIM2->ARR = 1999;
 80002e0:	f04f 4380 	mov.w	r3, #1073741824	@ 0x40000000
 80002e4:	f240 72cf 	movw	r2, #1999	@ 0x7cf
 80002e8:	62da      	str	r2, [r3, #44]	@ 0x2c
	TIM2->DIER = TIM_DIER_UIE;
 80002ea:	f04f 4380 	mov.w	r3, #1073741824	@ 0x40000000
 80002ee:	2201      	movs	r2, #1
 80002f0:	60da      	str	r2, [r3, #12]

	NVIC_EnableIRQ(TIM2_IRQn);
 80002f2:	201c      	movs	r0, #28
 80002f4:	f7ff ff90 	bl	8000218 <__NVIC_EnableIRQ>
	while (1) {
 80002f8:	bf00      	nop
 80002fa:	e7fd      	b.n	80002f8 <main+0xa4>
 80002fc:	40021000 	.word	0x40021000
 8000300:	40010000 	.word	0x40010000
 8000304:	40010400 	.word	0x40010400
 8000308:	48000c00 	.word	0x48000c00
 800030c:	48000400 	.word	0x48000400
 8000310:	20000000 	.word	0x20000000

08000314 <EXTI15_10_IRQHandler>:

	}
}

void EXTI15_10_IRQHandler()
{
 8000314:	b480      	push	{r7}
 8000316:	af00      	add	r7, sp, #0
	if((GPIOB->IDR & GPIO_IDR_ID12) == 0 )
 8000318:	4b19      	ldr	r3, [pc, #100]	@ (8000380 <EXTI15_10_IRQHandler+0x6c>)
 800031a:	691b      	ldr	r3, [r3, #16]
 800031c:	f403 5380 	and.w	r3, r3, #4096	@ 0x1000
 8000320:	2b00      	cmp	r3, #0
 8000322:	d11a      	bne.n	800035a <EXTI15_10_IRQHandler+0x46>
	{
		 TIM2->CNT = 0;
 8000324:	f04f 4380 	mov.w	r3, #1073741824	@ 0x40000000
 8000328:	2200      	movs	r2, #0
 800032a:	625a      	str	r2, [r3, #36]	@ 0x24
			    	  TIM2->CR1 |= TIM_CR1_CEN;
 800032c:	f04f 4380 	mov.w	r3, #1073741824	@ 0x40000000
 8000330:	681b      	ldr	r3, [r3, #0]
 8000332:	f04f 4280 	mov.w	r2, #1073741824	@ 0x40000000
 8000336:	f043 0301 	orr.w	r3, r3, #1
 800033a:	6013      	str	r3, [r2, #0]
			    	  turn_on += 1;
 800033c:	4b11      	ldr	r3, [pc, #68]	@ (8000384 <EXTI15_10_IRQHandler+0x70>)
 800033e:	681b      	ldr	r3, [r3, #0]
 8000340:	3301      	adds	r3, #1
 8000342:	4a10      	ldr	r2, [pc, #64]	@ (8000384 <EXTI15_10_IRQHandler+0x70>)
 8000344:	6013      	str	r3, [r2, #0]
			    	  GPIOD->BSRR = GPIO_BSRR_BR9 | GPIO_BSRR_BR10
 8000346:	4b10      	ldr	r3, [pc, #64]	@ (8000388 <EXTI15_10_IRQHandler+0x74>)
 8000348:	f04f 52f0 	mov.w	r2, #503316480	@ 0x1e000000
 800034c:	619a      	str	r2, [r3, #24]
			    	  								| GPIO_BSRR_BR11 | GPIO_BSRR_BR12;
		GPIOD->BSRR = turn_on << 9;
 800034e:	4b0d      	ldr	r3, [pc, #52]	@ (8000384 <EXTI15_10_IRQHandler+0x70>)
 8000350:	681b      	ldr	r3, [r3, #0]
 8000352:	4a0d      	ldr	r2, [pc, #52]	@ (8000388 <EXTI15_10_IRQHandler+0x74>)
 8000354:	025b      	lsls	r3, r3, #9
 8000356:	6193      	str	r3, [r2, #24]
 8000358:	e007      	b.n	800036a <EXTI15_10_IRQHandler+0x56>
	}else
	{
		TIM2->CR1 &= ~TIM_CR1_CEN;
 800035a:	f04f 4380 	mov.w	r3, #1073741824	@ 0x40000000
 800035e:	681b      	ldr	r3, [r3, #0]
 8000360:	f04f 4280 	mov.w	r2, #1073741824	@ 0x40000000
 8000364:	f023 0301 	bic.w	r3, r3, #1
 8000368:	6013      	str	r3, [r2, #0]
	}
	EXTI->PR1 |= EXTI_PR1_PIF12;
 800036a:	4b08      	ldr	r3, [pc, #32]	@ (800038c <EXTI15_10_IRQHandler+0x78>)
 800036c:	695b      	ldr	r3, [r3, #20]
 800036e:	4a07      	ldr	r2, [pc, #28]	@ (800038c <EXTI15_10_IRQHandler+0x78>)
 8000370:	f443 5380 	orr.w	r3, r3, #4096	@ 0x1000
 8000374:	6153      	str	r3, [r2, #20]
}
 8000376:	bf00      	nop
 8000378:	46bd      	mov	sp, r7
 800037a:	f85d 7b04 	ldr.w	r7, [sp], #4
 800037e:	4770      	bx	lr
 8000380:	48000400 	.word	0x48000400
 8000384:	20000020 	.word	0x20000020
 8000388:	48000c00 	.word	0x48000c00
 800038c:	40010400 	.word	0x40010400

08000390 <TIM2_IRQHandler>:
void TIM2_IRQHandler(void)
  {
 8000390:	b480      	push	{r7}
 8000392:	af00      	add	r7, sp, #0
	  GPIOD->BSRR = GPIO_BSRR_BR9 | GPIO_BSRR_BR10
 8000394:	4b0d      	ldr	r3, [pc, #52]	@ (80003cc <TIM2_IRQHandler+0x3c>)
 8000396:	f04f 52f0 	mov.w	r2, #503316480	@ 0x1e000000
 800039a:	619a      	str	r2, [r3, #24]
	  								| GPIO_BSRR_BR11 | GPIO_BSRR_BR12;
		turn_on = 0;
 800039c:	4b0c      	ldr	r3, [pc, #48]	@ (80003d0 <TIM2_IRQHandler+0x40>)
 800039e:	2200      	movs	r2, #0
 80003a0:	601a      	str	r2, [r3, #0]
  	TIM2->CR1 &= ~TIM_CR1_CEN;
 80003a2:	f04f 4380 	mov.w	r3, #1073741824	@ 0x40000000
 80003a6:	681b      	ldr	r3, [r3, #0]
 80003a8:	f04f 4280 	mov.w	r2, #1073741824	@ 0x40000000
 80003ac:	f023 0301 	bic.w	r3, r3, #1
 80003b0:	6013      	str	r3, [r2, #0]
  	TIM2->SR &= ~ TIM_SR_UIF;
 80003b2:	f04f 4380 	mov.w	r3, #1073741824	@ 0x40000000
 80003b6:	691b      	ldr	r3, [r3, #16]
 80003b8:	f04f 4280 	mov.w	r2, #1073741824	@ 0x40000000
 80003bc:	f023 0301 	bic.w	r3, r3, #1
 80003c0:	6113      	str	r3, [r2, #16]
  }
 80003c2:	bf00      	nop
 80003c4:	46bd      	mov	sp, r7
 80003c6:	f85d 7b04 	ldr.w	r7, [sp], #4
 80003ca:	4770      	bx	lr
 80003cc:	48000c00 	.word	0x48000c00
 80003d0:	20000020 	.word	0x20000020

080003d4 <Reset_Handler>:

  .section .text.Reset_Handler
  .weak Reset_Handler
  .type Reset_Handler, %function
Reset_Handler:
  ldr   r0, =_estack
 80003d4:	480d      	ldr	r0, [pc, #52]	@ (800040c <LoopForever+0x2>)
  mov   sp, r0          /* set stack pointer */
 80003d6:	4685      	mov	sp, r0
/* Call the clock system initialization function.*/  bl  SystemInit
 80003d8:	f3af 8000 	nop.w

/* Copy the data segment initializers from flash to SRAM */
  ldr r0, =_sdata
 80003dc:	480c      	ldr	r0, [pc, #48]	@ (8000410 <LoopForever+0x6>)
  ldr r1, =_edata
 80003de:	490d      	ldr	r1, [pc, #52]	@ (8000414 <LoopForever+0xa>)
  ldr r2, =_sidata
 80003e0:	4a0d      	ldr	r2, [pc, #52]	@ (8000418 <LoopForever+0xe>)
  movs r3, #0
 80003e2:	2300      	movs	r3, #0
  b LoopCopyDataInit
 80003e4:	e002      	b.n	80003ec <LoopCopyDataInit>

080003e6 <CopyDataInit>:

CopyDataInit:
  ldr r4, [r2, r3]
 80003e6:	58d4      	ldr	r4, [r2, r3]
  str r4, [r0, r3]
 80003e8:	50c4      	str	r4, [r0, r3]
  adds r3, r3, #4
 80003ea:	3304      	adds	r3, #4

080003ec <LoopCopyDataInit>:

LoopCopyDataInit:
  adds r4, r0, r3
 80003ec:	18c4      	adds	r4, r0, r3
  cmp r4, r1
 80003ee:	428c      	cmp	r4, r1
  bcc CopyDataInit
 80003f0:	d3f9      	bcc.n	80003e6 <CopyDataInit>

/* Zero fill the bss segment. */
  ldr r2, =_sbss
 80003f2:	4a0a      	ldr	r2, [pc, #40]	@ (800041c <LoopForever+0x12>)
  ldr r4, =_ebss
 80003f4:	4c0a      	ldr	r4, [pc, #40]	@ (8000420 <LoopForever+0x16>)
  movs r3, #0
 80003f6:	2300      	movs	r3, #0
  b LoopFillZerobss
 80003f8:	e001      	b.n	80003fe <LoopFillZerobss>

080003fa <FillZerobss>:

FillZerobss:
  str  r3, [r2]
 80003fa:	6013      	str	r3, [r2, #0]
  adds r2, r2, #4
 80003fc:	3204      	adds	r2, #4

080003fe <LoopFillZerobss>:

LoopFillZerobss:
  cmp r2, r4
 80003fe:	42a2      	cmp	r2, r4
  bcc FillZerobss
 8000400:	d3fb      	bcc.n	80003fa <FillZerobss>

/* Call static constructors */
  bl __libc_init_array
 8000402:	f000 f811 	bl	8000428 <__libc_init_array>
/* Call the application's entry point.*/
  bl main
 8000406:	f7ff ff25 	bl	8000254 <main>

0800040a <LoopForever>:

LoopForever:
  b LoopForever
 800040a:	e7fe      	b.n	800040a <LoopForever>
  ldr   r0, =_estack
 800040c:	20020000 	.word	0x20020000
  ldr r0, =_sdata
 8000410:	20000000 	.word	0x20000000
  ldr r1, =_edata
 8000414:	20000004 	.word	0x20000004
  ldr r2, =_sidata
 8000418:	08000490 	.word	0x08000490
  ldr r2, =_sbss
 800041c:	20000004 	.word	0x20000004
  ldr r4, =_ebss
 8000420:	20000024 	.word	0x20000024

08000424 <ADC1_2_IRQHandler>:
 * @retval : None
*/
  .section .text.Default_Handler,"ax",%progbits
Default_Handler:
Infinite_Loop:
  b Infinite_Loop
 8000424:	e7fe      	b.n	8000424 <ADC1_2_IRQHandler>
	...

08000428 <__libc_init_array>:
 8000428:	b570      	push	{r4, r5, r6, lr}
 800042a:	4d0d      	ldr	r5, [pc, #52]	@ (8000460 <__libc_init_array+0x38>)
 800042c:	4c0d      	ldr	r4, [pc, #52]	@ (8000464 <__libc_init_array+0x3c>)
 800042e:	1b64      	subs	r4, r4, r5
 8000430:	10a4      	asrs	r4, r4, #2
 8000432:	2600      	movs	r6, #0
 8000434:	42a6      	cmp	r6, r4
 8000436:	d109      	bne.n	800044c <__libc_init_array+0x24>
 8000438:	4d0b      	ldr	r5, [pc, #44]	@ (8000468 <__libc_init_array+0x40>)
 800043a:	4c0c      	ldr	r4, [pc, #48]	@ (800046c <__libc_init_array+0x44>)
 800043c:	f000 f818 	bl	8000470 <_init>
 8000440:	1b64      	subs	r4, r4, r5
 8000442:	10a4      	asrs	r4, r4, #2
 8000444:	2600      	movs	r6, #0
 8000446:	42a6      	cmp	r6, r4
 8000448:	d105      	bne.n	8000456 <__libc_init_array+0x2e>
 800044a:	bd70      	pop	{r4, r5, r6, pc}
 800044c:	f855 3b04 	ldr.w	r3, [r5], #4
 8000450:	4798      	blx	r3
 8000452:	3601      	adds	r6, #1
 8000454:	e7ee      	b.n	8000434 <__libc_init_array+0xc>
 8000456:	f855 3b04 	ldr.w	r3, [r5], #4
 800045a:	4798      	blx	r3
 800045c:	3601      	adds	r6, #1
 800045e:	e7f2      	b.n	8000446 <__libc_init_array+0x1e>
 8000460:	08000488 	.word	0x08000488
 8000464:	08000488 	.word	0x08000488
 8000468:	08000488 	.word	0x08000488
 800046c:	0800048c 	.word	0x0800048c

08000470 <_init>:
 8000470:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 8000472:	bf00      	nop
 8000474:	bcf8      	pop	{r3, r4, r5, r6, r7}
 8000476:	bc08      	pop	{r3}
 8000478:	469e      	mov	lr, r3
 800047a:	4770      	bx	lr

0800047c <_fini>:
 800047c:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 800047e:	bf00      	nop
 8000480:	bcf8      	pop	{r3, r4, r5, r6, r7}
 8000482:	bc08      	pop	{r3}
 8000484:	469e      	mov	lr, r3
 8000486:	4770      	bx	lr
