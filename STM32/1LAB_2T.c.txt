#include "stm32g474xx.h"

int main(void) {
	RCC->AHB2ENR |= RCC_AHB2ENR_GPIODEN;
	RCC->AHB2ENR |= RCC_AHB2ENR_GPIOBEN;

	GPIOD->MODER &= ~(GPIO_MODER_MODE9_Msk | GPIO_MODER_MODE10_Msk
			| GPIO_MODER_MODE11_Msk | GPIO_MODER_MODE12_Msk);
	GPIOD->MODER |= 1 << GPIO_MODER_MODE9_Pos | 1 << GPIO_MODER_MODE10_Pos
			| 1 << GPIO_MODER_MODE11_Pos | 1 << GPIO_MODER_MODE12_Pos;

	GPIOB->MODER &= ~(GPIO_MODER_MODE12_Msk | GPIO_MODER_MODE13_Msk
			| GPIO_MODER_MODE14_Msk | GPIO_MODER_MODE15_Msk);
	GPIOB->MODER |= 0 << GPIO_MODER_MODE12_Pos | 0 << GPIO_MODER_MODE13_Pos
			| 0 << GPIO_MODER_MODE14_Pos | 0 << GPIO_MODER_MODE15_Pos;

	while (1) {
		if ((GPIOB->IDR & GPIO_IDR_ID12) == 0) {
			GPIOD->BSRR = GPIO_BSRR_BS9;
		} 
		else {
			GPIOD->BSRR = GPIO_BSRR_BR9;
		}

		if ((GPIOB->IDR & GPIO_IDR_ID13) == 0) {
			GPIOD->BSRR = GPIO_BSRR_BS10;
		} 
		else {
			GPIOD->BSRR = GPIO_BSRR_BR10;
		}

		if ((GPIOB->IDR & GPIO_IDR_ID14) == 0) {
			GPIOD->BSRR = GPIO_BSRR_BS11;
		} 
		else {
			GPIOD->BSRR = GPIO_BSRR_BR11;
		}

		if ((GPIOB->IDR & GPIO_IDR_ID15) == 0) {
			GPIOD->BSRR = GPIO_BSRR_BS12;
		} 
		else {
			GPIOD->BSRR = GPIO_BSRR_BR12;
		}
	}
}